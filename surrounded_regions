class Solution {
public:
    int row = 0;
    int col = 0;

    void dfs(int x, int y, vector<vector<char>>& board) {
        if (x < 0 || x >= row || y < 0 || y >= col || board[x][y] != 'O') {
            return;
        }
        board[x][y] = '#';
        dfs(x + 1, y, board);
        dfs(x - 1, y, board);
        dfs(x, y + 1, board);
        dfs(x, y - 1, board);
    }

    void solve(vector<vector<char>>& board) {
        row = board.size();
        col = board[0].size();

        for (int i = 0; i < row; i++) {
            dfs(i, 0, board);
            dfs(i, col - 1, board);
        }
        for (int j = 0; j < col; j++) {
            dfs(0, j, board);
            dfs(row - 1, j, board);
        }
        for (int i = 0; i < row; i++) { 
            for (int j = 0; j < col; j++) {
                char c = board[i][j];
                if (c == 'O') {
                    board[i][j] = 'X';
                }
                if (c == '#') {
                    board[i][j] = 'O';
                }
            }
        }
        return;
    }
};
